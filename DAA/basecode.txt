SAPATEIRO
import java.util.*;
   
    class Racio implements Comparable<Racio> {
        int dias,i;
        double rac,multas;

        public Racio(int i,int dias, double multas, double rac){
            this.i=i;
            this.dias=dias;
            this.multas=multas;
            this.rac=rac;
        }
        @Override
        
        public int compareTo(Racio racio) {
            if (rac > racio.rac) return +1;
            if (rac < racio.rac) return -1;
            return 0;
        }
    }

    public class daa014 {
    public static void main(String args[]) {
        
        Scanner stdin = new Scanner(System.in);
        int n = stdin.nextInt(); // nr de encomendas
        
        int dias=0;
        double multas=0;
        
        Racio[] ratio = new Racio[n];
        
        
        for(int i=0; i < n; i++){
            dias = stdin.nextInt();
            multas =stdin.nextInt();
            ratio[i] = new Racio(i,dias,multas,dias/multas);
        }
        
        Arrays.sort(ratio);
       
        for(int i=0; i <ratio.length-1;i++)
            System.out.print(ratio[i].i+1 + " ");
        System.out.print(ratio[ratio.length-1].i+1);
        
        System.out.println();
        }
}



PESQUISA BINARIA

import java.util.*;
public class daa010 {
    public static void pesquisaBinaria(int s[], int low, int high, int x) {
        if (x < s[0]) {
            System.out.println(s[0]);
            return;
        }

        if (x > s[s.length - 1]) {
            System.out.println(s[s.length - 1]);
            return;
        }
        int m = 0;
        while (low <= high) {
            m = low + (high - low) / 2;
            if (s[m] == x) {
                System.out.println(s[m]);
                return;
            } else if (s[m] > x)
                high = m - 1;
            else
                low = m + 1;
        }
        if ((s[low] - x) < (x - s[high])) {
            System.out.println(s[low]);
        } 
        else if ((s[low] - x) == (x - s[high])) {
            System.out.println(s[high] + " " + s[low]);
        }
        else {
            System.out.println(s[high]);
        }
    }

    public static void main(String args[]) {
        Scanner stdin = new Scanner(System.in);
        int n = stdin.nextInt();
        int s[] = new int[n];

        int t = s.length;
        int n1 = (t * (t - 1) / 2); // formula slides
        int somas[] = new int[n1];
        for (int i = 0; i < n; i++)
            s[i] = stdin.nextInt();
        int k = 0;
        for (int i = 0; i < s.length; i++) {
            for (int j = i + 1; j < s.length; j++) {
                somas[k] = s[i] + s[j];
                k++;
            }
        }
        Arrays.sort(somas);

        int q = stdin.nextInt(); // qt perguntas
        int p[] = new int[q];
        for (int i = 0; i < q; i++) {
            p[i] = stdin.nextInt();
            pesquisaBinaria(somas, 0, somas.length - 1, p[i]);
        }
    }
}


SOMAS

    import java.io.*;
    import java.util.*;
    
    class Letra implements Comparable<Letra> {
        public char letra;
        public int contagem;
        public int posicao;

    public Letra(char l, int n, int pos){
        letra = l;
        contagem = n;
        posicao = pos;
    }
    @Override
    public int compareTo(Letra a) {
        if(a.contagem < contagem)
            return -1;

        if(a.contagem > contagem)
            return 1;
        else{
            if(  posicao>a.posicao)
                return 1;
            return -1;
        }
        }
    
    }
    public class daa009 {
        public static void main(String args[]) {
            Scanner stdin = new Scanner(System.in);
            Letra letra[] =  new Letra[26];
            for (int i = 0; i <26; i++)
                letra[i] = new Letra((char)('A'+i), 0, -1);
            //ler fragmento adn
            String adn = stdin.nextLine();
            for(int i=0; i < adn.length();i++){
                int l= adn.charAt(i) -'A';
                //System.out.println(l);
                letra[l].contagem ++;
                if(letra[l].contagem ==1)
                    letra[l].posicao =i;
            }
            Arrays.sort(letra);
            for(int i=0; i < 26; i++){
                if(letra[i].contagem>=1)
                System.out.println(letra[i].letra + " " +  letra[i].contagem);
            }
        
        }
    }
